# Default values for mobile-switch-settings.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  registry: "container-registry.dev.s2m.ma/mobile-switch"
  registry1: "docker.io/bitnami"
  imagePullSecrets:
  - name: mobile-switch-settings-image-puller
  producer: 
    acks: "1"
  shemaRegister:
    url: "ac97165a8a33c41dca0acabfc5898879-1191876181.us-east-2.elb.amazonaws.com"
    port: "8081"
  kafka:
    ssl: 
      keyStore:
        path: "#{null}"
        password: "#{null}"
      trustStore:
        path: "#{null}"
        password: "#{null}"
    jeager:
      host: "my-jaeger-agent.observability" 
    topic:
      notification: "nxp-integration-notification-system-kafka-consumer-no-000001"
      settingsInquiries: "mobile-switch-settings-inquiries-integration-0001"
      inquiryService: "MS-SETTINGS-001"
      settingsSaf: "mobile-switch-settings-saf-integration-0001"
    request:
      timeOutMs: "5000"
    userInfo: "#{null}"
    topicSufixe: "integration"
    retryBackOffMs: "500"
    topicTrace: "nxp-audit-trail-integration-tracing-activity-topic-no-000003"
    topicSensitiveData: "nxp-audit-trail-integration-sensitive-data-topic-no-000003"
    topicForbiddenAccess: "nxp-audit-trail-integration-forbidden-access-topic-no-000003"
    bootstratpServer:
      url: "a885f377d36d142579ed20291e03f761-6d76f39896621ce6.elb.us-east-2.amazonaws.com"
      port: "9094"
    requestTimeOutMs: "5000"
    retryBackoffMs: "500"
    consumer:
      autoOffsetReset: "latest"
      enableAutoCommit: "false"
      groupId: "mobile-switch-group"
  dependencies:
    springBootAdmin: "http://admin-server.mobile-switch-integration:9090"
    notificationName: "notifications-service"
    notificationApiUrl: "http://socle-notification-service:9090/api"
    walletName: "mobile-switch-wallet"
    walletApiUrl: "http://ms-mobile-switch-wallet:9090/swmn/wallets/1/0"
    vaultName: "vault-service"
    vaultApiUrl: "http://socle-vault-service:9090/api"

app:
  serverPort: "9090"
  logMonitoring:
    logLevel: "prod"
  jpa:
    logLevel: "true"

swagger:
  enabled: "true"
  basePackage: "ma.s2m.nxp.settings.controller"
  clientID: "swagger-ui"
  clientSecret: "0fae201f-7c8d-47dd-9443-653827321b9eb"
  title: "Switch Mobile Settings Management Rest APIs"
  description: "This page lists all the Rest APIs for witch Mobile Settings Gateway API."
  version: "1.0.0"
  contactName: "S2M SIF"
  contactUrl: "www.s2m.ma"
  contactEmail: "contact@s2m.ma"

# DB mysql
datasource:
  image:
    repository: "mysql"
    tag: "8.0.27-debian-10-r63"
  driverClassName: "com.mysql.cj.jdbc.Driver"
  initializationMode: "never"
  platform: "MYSQL"
  jdbc: "mysql"
  ora: ""
  additional: "?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC"
  rdbms:
    host: "mysql"
    port: "3306"
    sid: ""
  db:
    name: "settings_db"
    username: "root"
    password: "cGFzc3dvcmQ="

jpa: 
  database: "MYSQL"
  databasePlatform: "org.hibernate.dialect.MySQL5InnoDBDialect"
  generateDdl: "false"
  hibernate: 
    ddlAuto: "none"
  showSql: "prod"
    
keycloak:
  host: "http://keycloak.transvers-integration:8080/auth"
  realm: "Mobile-Switch"
  resource: "settings"
  principalAttribute: "preferred_username"
  secret: "b96aedc1-5903-4614-abc7-b87a26b87e90"
  bearerOnly: "false"
  publicClient: "true"
  addonEnable: "false"
  unprotectedPath: "/public/**, /actuator/**, /swmn/organizations/**,/api/v1/setup-clearing/**, /api/v1/centers/functional/**, /api/v1/service-fees/institutions"

kafka:
  jeager:
    serviceName: "ms-settings"
    sampleType: "const"
    sampleParam: "1"
  consumer:
    groupId: "mobile-switch-settings-group"
cors:
  enabled: "true"
  allowedAddresses: "https://ui-mobile-switch-integration.app.dev.s2m.ma,https://ui-mobile-switch-qualif.app.dev.s2m.ma,https://194.204.196.220:9845/mobile-web-api/mptf/,http://socle-notification-service:9090"

notification:
  receiverEmail: "ms.notifications@gmail.com"
  
encryption:
  controllers: 

springboot:
  port: "--server.port=9090 --server.servlet.context-path=/"

replicaCount: 2

image:
  repository: ms-mobile-switch-settings
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "develop"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
      - ALL
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 9090

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 850m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 384Mi

readinessProbe:
  enabled: true
  httpGet:
    path: "/actuator/health"
    port: 9090
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1

livenessProbe:
  enabled: true
  httpGet:
    path: "/actuator/health"
    port: 9090
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1

strategy: {}
  # type: Recreate
  # type: RollingUpdate
  # rollingUpdate:
  #   maxSurge: 0
  #   maxUnavailable: 1

readinessProbeSql:
  enabled: true
  httpGet:
    path: "/actuator/health"
    port: 9090
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1

livenessProbeSql:
  enabled: true
  httpGet:
    path: "/actuator/health"
    port: 9090
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1

nodeSelector: {}

tolerations: []

affinity: {}
